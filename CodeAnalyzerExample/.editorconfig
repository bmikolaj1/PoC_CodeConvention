# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
###############################
# Core EditorConfig Options   #
###############################
# All files
[*]
indent_style = space
# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom
end_of_line = crlf
###############################
# .NET Coding Conventions     #
###############################
[*.{cs,vb}]
# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
# this. preferences
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:warning
# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning
###############################
# Naming Conventions          #
###############################
# Naming rules
dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = error
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.severity = error
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be_begins_with_underscore.severity = error
dotnet_naming_rule.private_or_internal_field_should_be_begins_with_underscore.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_begins_with_underscore.style = begins_with_underscore

# Symbol specifications
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles
dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix = 
dotnet_naming_style.begins_with_underscore.word_separator = 
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = false:suggestion
# Expression-bodied members
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_switch_expression = true:warning
# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_after_comma = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_declaration_statements = true
# Wrapping preferences
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true
# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:error

###############################
# Roslynator Formatting Rules #
###############################
# RCS0002: Add empty line after #region.
dotnet_diagnostic.RCS0002.severity = warning
# RCS0003: Add empty line after using directive list.
dotnet_diagnostic.RCS0003.severity = warning
# RCS0005: Add empty line before #endregion.
dotnet_diagnostic.RCS0005.severity = warning
# RCS0008: Add empty line between block and statement.
dotnet_diagnostic.RCS0008.severity = warning
# RCS0013: Add empty line between single-line declarations of different kind.
dotnet_diagnostic.RCS0013.severity = warning
# RCS0014: Add empty line between switch sections.
dotnet_diagnostic.RCS0014.severity = warning
# RCS0015: Add empty line between using directives with different root namespace (or vice versa).
dotnet_diagnostic.RCS0015.severity = warning
# RCS0021: Add newline after opening brace of block.
dotnet_diagnostic.RCS0021.severity = warning
# RCS0024: Add newline after switch label.
dotnet_diagnostic.RCS0024.severity = warning
# RCS0025: Add newline before accessor of full property.
dotnet_diagnostic.RCS0025.severity = warning
# RCS0027: Add newline before binary operator instead of after it (or vice versa).
dotnet_diagnostic.RCS0027.severity = warning
# RCS0028i: Add newline after conditional operator instead of before it.
dotnet_diagnostic.RCS0028i.severity = warning
# RCS0029: Add newline before constructor initializer.
dotnet_diagnostic.RCS0029.severity = warning
# RCS0031: Add newline before enum member.
dotnet_diagnostic.RCS0031.severity = warning
# RCS0032: Add newline before expression-body arrow instead of after it (or vice versa).
dotnet_diagnostic.RCS0032.severity = warning
# RCS0033: Add newline before statement.
dotnet_diagnostic.RCS0033.severity = error
# RCS0034: Add newline before type parameter constraint.
dotnet_diagnostic.RCS0034.severity = warning
# RCS0039: Remove newline before base list.
dotnet_diagnostic.RCS0039.severity = warning
# RCS0041: Remove newline between 'if' keyword and 'else' keyword.
dotnet_diagnostic.RCS0041.severity = warning
# RCS0042: Remove newlines from accessor list of auto-property.
dotnet_diagnostic.RCS0042.severity = warning

###############################
# Roslynator Coding Conventions#
###############################
# RCS1001: Add braces (when expression spans over multiple lines).
dotnet_diagnostic.RCS1001.severity = warning
# RCS1003: Add braces to if-else (when expression spans over multiple lines).
dotnet_diagnostic.RCS1003.severity = warning
# RCS1005: Simplify nested using statement.
dotnet_diagnostic.RCS1005.severity = suggestion
# RCS1006: Merge 'else' with nested 'if'.
dotnet_diagnostic.RCS1006.severity = warning
# RCS1007: Add braces.
dotnet_diagnostic.RCS1007.severity = warning
# RCS1010: Use 'var' instead of explicit type (when the type is obvious).
dotnet_diagnostic.RCS1010.severity = warning
# RCS1013: Use predefined type.
dotnet_diagnostic.RCS1013.severity = suggestion
# RCS1014: Avoid implicitly-typed array.
dotnet_diagnostic.RCS1014.severity = warning
# RCS1015: Use nameof operator.
dotnet_diagnostic.RCS1015.severity = warning
# RCS1016: Use expression-bodied member.
dotnet_diagnostic.RCS1016.severity = suggestion
# RCS1018: Add accessibility modifiers.
dotnet_diagnostic.RCS1018.severity = warning
# RCS1019: Order modifiers.
dotnet_diagnostic.RCS1019.severity = warning
# RCS1020: Simplify Nullable<T> to T?.
dotnet_diagnostic.RCS1020.severity = warning
# RCS1021: Simplify lambda expression.
dotnet_diagnostic.RCS1021.severity = suggestion
# RCS1031: Remove unnecessary braces.
dotnet_diagnostic.RCS1031.severity = suggestion
# RCS1032: Remove redundant parentheses.
dotnet_diagnostic.RCS1032.severity = warning
# RCS1033: Remove redundant boolean literal.
dotnet_diagnostic.RCS1033.severity = warning
# RCS1036: Remove redundant empty line.
dotnet_diagnostic.RCS1036.severity = warning
# RCS1037: Remove trailing white-space.
dotnet_diagnostic.RCS1037.severity = warning
# RCS1038: Remove empty statement.
dotnet_diagnostic.RCS1038.severity = error
# RCS1040: Remove empty 'else' clause.
dotnet_diagnostic.RCS1040.severity = warning
# RCS1041: Remove empty initializer.
dotnet_diagnostic.RCS1041.severity = warning
# RCS1047: Non-asynchronous method name should not end with 'Async'.
dotnet_diagnostic.RCS1047.severity = error
# RCS1048: Use lambda expression instead of anonymous method.
dotnet_diagnostic.RCS1048.severity = warning
# RCS1049: Simplify boolean comparison.
dotnet_diagnostic.RCS1049.severity = warning
# RCS1052: Declare each attribute separately.
dotnet_diagnostic.RCS1052.severity = warning
# RCS1055: Avoid semicolon at the end of declaration.
dotnet_diagnostic.RCS1055.severity = warning
# RCS1058: Use compound assignment.
dotnet_diagnostic.RCS1058.severity = warning
# RCS1060: Declare each type in separate file.
dotnet_diagnostic.RCS1060.severity = suggestion
# RCS1061: Merge 'if' with nested 'if'.
dotnet_diagnostic.RCS1061.severity = warning
# RCS1063: Avoid usage of do statement to create an infinite loop.
dotnet_diagnostic.RCS1063.severity = error
# RCS1064: Avoid usage of for statement to create an infinite loop.
dotnet_diagnostic.RCS1064.severity = error
# RCS1066: Remove empty 'finally' clause.
dotnet_diagnostic.RCS1066.severity = error
# RCS1068: Simplify logical negation.
dotnet_diagnostic.RCS1068.severity = warning
# RCS1069: Remove unnecessary case label.
dotnet_diagnostic.RCS1069.severity = warning
# RCS1071: Remove redundant base constructor call.
dotnet_diagnostic.RCS1071.severity = suggestion
# RCS1072: Remove empty namespace declaration.
dotnet_diagnostic.RCS1072.severity = error
# RCS1073: Convert 'if' to 'return' statement.
dotnet_diagnostic.RCS1073.severity = warning
# RCS1074: Remove redundant constructor.
dotnet_diagnostic.RCS1074.severity = warning
# RCS1075: Avoid empty catch clause that catches System.Exception.
dotnet_diagnostic.RCS1075.severity = error
# RCS1077: Optimize LINQ method call.
dotnet_diagnostic.RCS1077.severity = warning
# RCS1079: Throwing of new NotImplementedException.
dotnet_diagnostic.RCS1079.severity = warning
# RCS1081: Split variable declaration.
dotnet_diagnostic.RCS1081.severity = warning
# RCS1084: Use coalesce expression instead of conditional expression.
dotnet_diagnostic.RCS1084.severity = warning
# RCS1085: Use auto-implemented property.
dotnet_diagnostic.RCS1085.severity = warning
# RCS1089: Use --/++ operator instead of assignment.
dotnet_diagnostic.RCS1089.severity = warning
# RCS1090: Call 'ConfigureAwait(false)'.
dotnet_diagnostic.RCS1090.severity = none
# RCS1091: Remove empty region.
dotnet_diagnostic.RCS1091.severity = warning
# RCS1093: Remove file with no code.
dotnet_diagnostic.RCS1093.severity = warning
# RCS1094: Declare using directive on top level.
dotnet_diagnostic.RCS1094.severity = warning
# RCS1097: Remove redundant 'ToString' call.
dotnet_diagnostic.RCS1097.severity = warning
# RCS1099: Default label should be the last label in a switch section.
dotnet_diagnostic.RCS1099.severity = error
# RCS1101: Format documentation summary on multiple lines.
dotnet_diagnostic.RCS1101.severity = suggestion
# RCS1102: Make class static.
dotnet_diagnostic.RCS1102.severity = silent
# RCS1103: Convert 'if' to assignment.
dotnet_diagnostic.RCS1103.severity = warning
# RCS1104: Simplify conditional expression.
dotnet_diagnostic.RCS1104.severity = warning
# RCS1105: Unncessary interpolation.
dotnet_diagnostic.RCS1105.severity = warning
# RCS1106: Remove empty destructor.
dotnet_diagnostic.RCS1106.severity = error
# RCS1110: Declare type inside namespace.
dotnet_diagnostic.RCS1110.severity = error
# RCS1112: Combine 'Enumerable.Where' method chain.
dotnet_diagnostic.RCS1112.severity = suggestion
# RCS1113: Use 'string.IsNullOrEmpty' method.
dotnet_diagnostic.RCS1113.severity = warning
# RCS1118: Mark local variable as const.
dotnet_diagnostic.RCS1118.severity = suggestion
# RCS1124: Inline local variable.
dotnet_diagnostic.RCS1124.severity = suggestion
# RCS1126: Add braces to if-else.
dotnet_diagnostic.RCS1126.severity = warning
# RCS1128: Use coalesce expression.
dotnet_diagnostic.RCS1128.severity = warning
# RCS1132: Remove redundant overriding member.
dotnet_diagnostic.RCS1132.severity = error
# RCS1133: Remove redundant Dispose/Close call.
dotnet_diagnostic.RCS1133.severity = warning
# RCS1134: Remove redundant statement.
dotnet_diagnostic.RCS1134.severity = warning
# RCS1136: Merge switch sections with equivalent content.
dotnet_diagnostic.RCS1136.severity = suggestion
# RCS1138: Add summary to documentation comment.
dotnet_diagnostic.RCS1138.severity = suggestion
# RCS1139: Add summary element to documentation comment.
dotnet_diagnostic.RCS1139.severity = suggestion
# RCS1140: Add exception to documentation comment.
dotnet_diagnostic.RCS1140.severity = suggestion
# RCS1141: Add 'param' element to documentation comment.
dotnet_diagnostic.RCS1141.severity = suggestion
# RCS1142: Add 'typeparam' element to documentation comment.
dotnet_diagnostic.RCS1142.severity = suggestion
# RCS1143: Simplify coalesce expression.
dotnet_diagnostic.RCS1143.severity = warning
# RCS1145: Remove redundant 'as' operator.
dotnet_diagnostic.RCS1145.severity = warning
# RCS1146: Use conditional access.
dotnet_diagnostic.RCS1146.severity = suggestion
# RCS1151: Remove redundant cast.
dotnet_diagnostic.RCS1151.severity = warning
# RCS1154: Sort enum members.
dotnet_diagnostic.RCS1154.severity = silent
# RCS1155: Use StringComparison when comparing strings.
dotnet_diagnostic.RCS1155.severity = suggestion
# RCS1156: Use string.Length instead of comparison with empty string.
dotnet_diagnostic.RCS1156.severity = warning
# RCS1158: Static member in generic type should use a type parameter.
dotnet_diagnostic.RCS1158.severity = warning
# RCS1160: Abstract type should not have public constructors.
dotnet_diagnostic.RCS1160.severity = warning
# RCS1161: Enum should declare explicit values.
dotnet_diagnostic.RCS1161.severity = warning
# RCS1162: Avoid chain of assignments.
dotnet_diagnostic.RCS1162.severity = warning
# RCS1163: Unused parameter.
dotnet_diagnostic.RCS1163.severity = error
# RCS1164: Unused type parameter.
dotnet_diagnostic.RCS1164.severity = error
# RCS1166: Value type object is never equal to null.
dotnet_diagnostic.RCS1166.severity = warning
# RCS1168: Parameter name differs from base name.
dotnet_diagnostic.RCS1168.severity = warning
# RCS1169: Make field read-only.
dotnet_diagnostic.RCS1169.severity = warning
# RCS1170: Use read-only auto-implemented property.
dotnet_diagnostic.RCS1170.severity = suggestion
# RCS1171: Simplify lazy initialization.
dotnet_diagnostic.RCS1171.severity = warning
# RCS1172: Use 'is' operator instead of 'as' operator.
dotnet_diagnostic.RCS1172.severity = warning
# RCS1173: Use coalesce expression instead of 'if'.
dotnet_diagnostic.RCS1173.severity = warning
# RCS1174: Remove redundant async/await.
dotnet_diagnostic.RCS1174.severity = suggestion
# RCS1175: Unused this parameter.
dotnet_diagnostic.RCS1175.severity = warning
# RCS1177: Use 'var' instead of explicit type (in foreach).
dotnet_diagnostic.RCS1177.severity = suggestion
# RCS1181: Convert comment to documentation comment.
dotnet_diagnostic.RCS1181.severity = suggestion
# RCS1182: Remove redundant base interface.
dotnet_diagnostic.RCS1182.severity = error
# RCS1187: Use constant instead of field.
dotnet_diagnostic.RCS1187.severity = suggestion
# RCS1188: Remove redundant auto-property initialization.
dotnet_diagnostic.RCS1188.severity = warning
# RCS1189: Add or remove region name.
dotnet_diagnostic.RCS1189.severity = suggestion
# RCS1190: Join string expressions.
dotnet_diagnostic.RCS1190.severity = warning
# RCS1192: Unnecessary usage of verbatim string literal.
dotnet_diagnostic.RCS1192.severity = warning
# RCS1193: Overriding member should not change 'params' modifier.
dotnet_diagnostic.RCS1193.severity = warning
# RCS1194: Implement exception constructors.
dotnet_diagnostic.RCS1194.severity = warning
# RCS1195: Use ^ operator.
dotnet_diagnostic.RCS1195.severity = suggestion
# RCS1196: Call extension method as instance method.
dotnet_diagnostic.RCS1196.severity = warning
# RCS1197: Optimize StringBuilder.Append/AppendLine call.
dotnet_diagnostic.RCS1197.severity = warning
# RCS1198: Avoid unnecessary boxing of value type.
dotnet_diagnostic.RCS1198.severity = warning
# RCS1199: Simplify boolean expression.
dotnet_diagnostic.RCS1199.severity = suggestion
# RCS1200: Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'.
dotnet_diagnostic.RCS1200.severity = suggestion
# RCS1201: Use method chaining.
dotnet_diagnostic.RCS1201.severity = warning
# RCS1202: Avoid NullReferenceException.
dotnet_diagnostic.RCS1202.severity = warning
# RCS1203: Use AttributeUsageAttribute.
dotnet_diagnostic.RCS1203.severity = warning
# RCS1206: Use conditional access instead of conditional expression.
dotnet_diagnostic.RCS1206.severity = warning
# RCS1208: Reduce 'if' nesting.
dotnet_diagnostic.RCS1208.severity = suggestion
# RCS1209: Order type parameter constraints.
dotnet_diagnostic.RCS1209.severity = warning
# RCS1211: Remove unnecessary 'else'.
dotnet_diagnostic.RCS1211.severity = warning
# RCS1212: Remove redundant assignment.
dotnet_diagnostic.RCS1212.severity = warning
# RCS1213: Remove unused member declaration.
dotnet_diagnostic.RCS1213.severity = warning
# RCS1214: Unnecessary interpolated string.
dotnet_diagnostic.RCS1214.severity = warning
# RCS1215: Expression is always equal to true/false.
dotnet_diagnostic.RCS1215.severity = warning
# RCS1218: Simplify code branching.
dotnet_diagnostic.RCS1218.severity = suggestion
# RCS1220: Use pattern matching instead of combination of 'is' operator and cast operator.
dotnet_diagnostic.RCS1220.severity = warning
# RCS1228: Unused element in documentation comment.
dotnet_diagnostic.RCS1228.severity = suggestion
# RCS1232: Order elements in documentation comment.
dotnet_diagnostic.RCS1232.severity = suggestion
# RCS1233: Use short-circuiting operator.
dotnet_diagnostic.RCS1233.severity = suggestion
# RCS1234: Duplicate enum value.
dotnet_diagnostic.RCS1234.severity = warning
# RCS1235: Optimize method call.
dotnet_diagnostic.RCS1235.severity = suggestion
# RCS1236: Use exception filter.
dotnet_diagnostic.RCS1236.severity = suggestion
# RCS1238: Avoid nested ?: operators.
dotnet_diagnostic.RCS1238.severity = warning
# RCS1239: Use 'for' statement instead of 'while' statement.
dotnet_diagnostic.RCS1239.severity = suggestion
# RCS1240: Operator is unnecessary.
dotnet_diagnostic.RCS1240.severity = warning
# RCS1241: Implement non-generic counterpart.
dotnet_diagnostic.RCS1241.severity = warning
# RCS1243: Duplicate word in a comment.
dotnet_diagnostic.RCS1243.severity = suggestion
# RCS1244: Simplify 'default' expression.
dotnet_diagnostic.RCS1244.severity = suggestion
